datasource db {
  provider = "postgresql"
  url = "***"
  default  = true
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                      Int                     @default(autoincrement()) @id
  email                   String                  @unique
  username                String                  @unique
  googleId                String?                 @unique
  firstName               String
  lastName                String
  password                String?
  websiteUrl              String?
  phone                   String?
  address                 String?
  minScheduleNotice       Int                     @default(0)
  oAuthToken              OAuthToken?
  recurrentAvailabilities RecurrentAvailability[]
  availabilityModifiers   AvailabilityModifier[]
  customers               Customer[]              @relation(references: [id])
  appointmentTypes        AppointmentType[]
  appointments            Appointment[]
}

model OAuthToken {
  id           Int     @default(autoincrement()) @id
  accessToken  String
  refreshToken String?
  user         User    @relation(fields: [userId], references: [id])
  userId       Int
}

model AppointmentType {
  id                  Int           @default(autoincrement()) @id
  name                String
  description         String?
  duration            Int
  price               Float?
  generateClientSheet Boolean       @default(false)
  user                User?         @relation(fields: [userId], references: [id])
  userId              Int?
  appointments        Appointment[]
}

model RecurrentAvailability {
  id        Int   @default(autoincrement()) @id
  day       Day
  startTime Int
  endTime   Int
  user      User? @relation(fields: [userId], references: [id])
  userId    Int?
}

model AvailabilityModifier {
  id          Int      @default(autoincrement()) @id
  start       DateTime
  end         DateTime
  isExclusive Boolean
  user        User?    @relation(fields: [userId], references: [id])
  userId      Int?
}

model Customer {
  id            Int           @default(autoincrement()) @id
  email         String        @unique
  firstName     String
  lastName      String
  phone         String?
  address       String?
  isBlackListed Boolean       @default(false)
  users         User[]        @relation(references: [id])
  appointments  Appointment[]
}

model Appointment {
  id                    Int              @default(autoincrement()) @id
  start                 DateTime
  end                   DateTime
  googleCalendarEventId String?
  appointmentType       AppointmentType? @relation(fields: [appointmentTypeId], references: [id])
  appointmentTypeId     Int?
  user                  User?            @relation(fields: [userId], references: [id])
  userId                Int?
  customer              Customer?        @relation(fields: [customerId], references: [id])
  customerId            Int?
}

enum Day {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}
